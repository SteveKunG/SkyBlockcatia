buildscript {
    repositories {
        maven { url "https://repo.spongepowered.org/maven" }
        maven { url "https://maven.minecraftforge.net" }
        gradlePluginPortal()
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

def mcVersion = project.mc_version
def username = project.username

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"

version = project.version
group = "com.stevekung.skyblockcatia"
archivesBaseName = "SkyBlockcatia"
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

minecraft {
    version = "${forge_version}"
    runDir = "run"
    mappings = "${mcp_mapping}"
    makeObfSourceJar = false
    clientJvmArgs += "-Dmixin.debug.export=true -Dmixin.debug.verbose=true"

    if (project.hasProperty("devauth_dir")) {
        clientJvmArgs += "-Ddevauth.configDir=${devauth_dir}"
    }

    clientRunArgs += "--mixin mixins.skyblockcatia.json --tweakClass org.spongepowered.asm.launch.MixinTweaker"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

// thanks to https://stackoverflow.com/a/38105112
def urlFile = { url, name ->
    File file = new File("$buildDir/download/${name}.jar")
    file.parentFile.mkdirs()
    if (!file.exists()) {
        new URL(url).withInputStream { downloadStream ->
            file.withOutputStream { fileOut ->
                fileOut << downloadStream
            }
        }
    }
    files(file.absolutePath)
}

repositories {
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
}

dependencies {
    embed("org.spongepowered:mixin:0.7.11-SNAPSHOT") { transitive = false }
    compile urlFile("https://github.com/BiscuitDevelopment/SkyblockAddons/releases/download/${sba_version}/SkyblockAddons-${sba_jar_name}.jar", "SkyblockAddons")
    compile "me.djtheredstoner:DevAuth-forge-legacy:1.0.0"
}

sourceSets {
    main {
        ext.refMap = "mixins.skyblockcatia.refmap.json"
    }
}

jar {
    from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "LICENSE.txt", "META-INF/*.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }
    manifest {
        attributes("FMLAT": "skyblockcatia_at.cfg",
                   "FMLCorePluginContainsFMLMod": "true",
                   "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                   "MixinConfigs": "mixins.skyblockcatia.json",
                   "ForceLoadAsMod": "true"
        )
    }
    exclude "debug/**"
    exclude "club/**"
    baseName = "SkyBlockcatia-" + mcVersion
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    baseName = "SkyBlockcatia-" + mcVersion
    exclude "debug/**"
    classifier = "sources"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "LICENSE.txt", "META-INF/*.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }
    manifest {
        attributes("FMLAT": "skyblockcatia_at.cfg",
                   "FMLCorePluginContainsFMLMod": "true",
                   "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                   "MixinConfigs": "mixins.skyblockcatia.json",
                   "ForceLoadAsMod": "true"
        )
    }
    exclude "debug/**"
    baseName = "SkyBlockcatia-" + mcVersion
    classifier = "deobf"
}

artifacts {
    archives sourcesJar
    archives deobfJar
}

curseforge {
    if (project.hasProperty("upload_api_key")) {
        apiKey = project.upload_api_key
        project {
            id = "397441"
            changelog = file("CHANGE_LOG.md")
            changelogType = "markdown"
            releaseType = "release"
            addGameVersion mcVersion

            mainArtifact(jar) {
                displayName = "SkyBlockcatia-" + mcVersion + "-" + version
            }
            addArtifact sourcesJar
            addArtifact deobfJar
        }
    }
}